#define N_STRIPS 40

// Assumes texture tile is unit square
// There should be a sqrt(2) here, but it cancels out with the sqrt(2) I left
// out when rotating (x, y) 4g degrees (I use x-y instead of (x-y)/sqrt(2) for
// the first component of the rotated vector)
#define sWidth 1.0 / N_STRIPS

shader Exp_Shader(float scale = 0, point UV_IN = point(0.0, 0.0, 0.0),
                  output color tartan_color = 0, output float bumpHeight = 1) {

  void STRIPE(float x, float y, float center, float width, color oldcolor,
              float bump, color newcolor, int shift) {
    float stripe_coord = mod(x - y, sWidth);
    if ((stripe_coord < 0.5 * sWidth) != shift) {
      if (abs(x - center) < width) {
        oldcolor = newcolor;
        bump *= sqrt(1 - pow(abs((x - center) / width), 2));
      } else if (abs(x - (1 - center)) < width) {
        oldcolor = newcolor;
        bump *= sqrt(1 - pow((x - (1 - center)) / width, 2));
      }
    } else {
      if (abs(y - center) < width) {
        oldcolor = newcolor + color(0.02, 0.02, 0.02);
        bump *= sqrt(1 - pow((y - center) / width, 2));
      } else if (abs(y - (1 - center)) < width) {
        oldcolor = newcolor + color(0.02, 0.02, 0.02);
        bump *= sqrt(1 - pow((y - (1 - center)) / width, 2));
      }
    }
    if (stripe_coord < 0.5 * sWidth) {
      bump *= sqrt(1 - pow((stripe_coord - 0.25 * sWidth) / (0.5 * sWidth), 2));
    } else {
      bump *= sqrt(1 - pow((stripe_coord - 0.75 * sWidth) / (0.5 * sWidth), 2));
    }
  }

  float x = UV_IN[0] * exp(scale);
  float y = UV_IN[1] * exp(scale);

  // Works correctly on negative x, y
  float modX = x - floor(x);
  float modY = y - floor(y);

  color blue = color(18.0 / 255, 18.0 / 255, 80.0 / 255);
  color green = color(0.00, 0.40, 0.20);
  color dark_green = color(0.00, 0.10, 0.10);
  color dark = color(0.00, 0.02, 0.13);
  color red = color(0.80, 0.00, 0.00);
  color yellow = color(1.00, 0.70, 0.00);

  STRIPE(modX, modY, 0.000, 1.000, tartan_color, bumpHeight, blue, 1);
  STRIPE(modX, modY, 0.000, 0.225, tartan_color, bumpHeight, dark_green, 0);
  STRIPE(modX, modY, 0.000, 0.225, tartan_color, bumpHeight, green, 1);
  STRIPE(modX, modY, 0.275, 0.050, tartan_color, bumpHeight, dark, 0);
  STRIPE(modX, modY, 0.150, 0.020, tartan_color, bumpHeight, red, 1);
  STRIPE(modX, modY, 0.110, 0.004, tartan_color, bumpHeight, red, 1);
  STRIPE(modX, modY, 0.325, 0.004, tartan_color, bumpHeight, red, 1);
  STRIPE(modX, modY, 0.420, 0.020, tartan_color, bumpHeight, red, 1);
  STRIPE(modX, modY, 0.460, 0.004, tartan_color, bumpHeight, red, 1);
  STRIPE(modX, modY, 0.000, 0.010, tartan_color, bumpHeight, yellow, 1);
}
